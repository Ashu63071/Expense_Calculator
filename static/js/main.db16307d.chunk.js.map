{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","prop","classes","className","react_default","a","createElement","children","ExpensesFilter","props","onChange","event","onChangeFilter","target","value","ExpenseDate","month","Intl","DateTimeFormat","format","date","day","getDate","year","getFullYear","ExpenseItem","UI_Card","Expenses_ExpenseDate","title","amount","ExpensesList","items","length","map","expense","Expenses_ExpenseItem","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","apply","Object","toConsumableArray","components_Charts_ChartBar","key","ExpensesChart","_step","chartDataPoints","_iterator","_createForOfIteratorHelper","expenses","s","n","done","getMonth","err","e","f","components_Charts_Chart","Expenses","_useState","useState","_useState2","slicedToArray","filteredYear","setFilteredYear","filteredExpenses","item","filter","toString","components_Expenses_ExpensesFilter","selected","selectedYear","console","log","Expenses_ExpensesChart","Expenses_ExpensesList","ExpenseForm","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","_useState5","_useState6","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSubmitExpenseData","type","min","step","onClick","cancel","NewExpense","openAddForm","setOpenAddForm","NewExpense_ExpenseForm","enteredExpenseData","objectSpread","random","onAddExpense","Navbar","backgroundColor","color","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","concat","mode","toggleMode","htmlFor","defaultProps","aboutText","Dummy_Expenses","App","setMode","setExpenses","document","body","components_NewExpense_NewExpense","prevExpenses","components_Expenses_Expenses","textAlign","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.db16307d.chunk.js","sourcesContent":["import './Card.css';\r\nimport React from 'react';\r\n\r\nfunction Card(prop){\r\n    const classes = 'card ' + prop.className;\r\n\r\n    return <div className={classes}>{prop.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler}>\r\n          {/* <option value=''>ALL</option> */}\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\nimport React from 'react';\r\n\r\nfunction ExpenseDate(prop){\r\n\r\n    const month = new Intl.DateTimeFormat('en-US', {month:'long'}).format(prop.date);\r\n    const day = prop.date.getDate();\r\n    const year = prop.date.getFullYear();\r\n\r\n    return (\r\n      <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        {/* <div className=\"expense-date__month\">{prop.date.getMonth()}</div> */}\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem(prop){\r\n\r\n    \r\n    return (\r\n     <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={prop.date}/>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{prop.title}</h2>\r\n          <div className=\"expense-item__price\">${prop.amount}</div>\r\n        </div>\r\n        \r\n      </Card>\r\n      </li> \r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\nfunction ExpensesList(props) {\r\n\r\n    //let expensesContent = <p>No expenses found.</p>;\r\n    if (props.items.length === 0){\r\n        return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map(expense => (\r\n            <ExpenseItem \r\n          id = {expense.id}\r\n          title={expense.title} \r\n          amount={expense.amount} \r\n          date={expense.date}\r\n          />\r\n        ))}\r\n    </ul>\r\n\r\n};\r\n\r\n\r\nexport default ExpensesList;\r\n","import React from 'react'\r\nimport './ChartBar.css';\r\nconst ChartBar = props => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue >0){\r\n        barFillHeight = Math.round((props.value / props.maxValue)*100)+ '%';\r\n    }\r\n\r\n    return (\r\n    <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","\r\nimport React from 'react'\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\nconst Chart = props => {\r\n\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n        {props.dataPoints.map(dataPoint =>(\r\n            <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMax}\r\n            label={dataPoint.label}\r\n            />\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Charts/Chart';\r\n\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        {label:'Jan', value:0},\r\n        {label:'Feb', value:0},\r\n        {label:'Mar', value:0},\r\n        {label:'Apr', value:0},\r\n        {label:'May', value:0},\r\n        {label:'Jun', value:0},\r\n        {label:'Jul', value:0},\r\n        {label:'Aug', value:0},\r\n        {label:'Sep', value:0},\r\n        {label:'Oct', value:0},\r\n        {label:'Nov', value:0},\r\n        {label:'Dec', value:0}\r\n    ];\r\n\r\n    for (const expense of props.expenses){\r\n         const expenseMonth = expense.date.getMonth(); // Jan gives 0\r\n         chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Chart dataPoints={chartDataPoints}/>\r\n        )\r\n    };\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n// import ExpenseItem from './ExpenseItem';\r\nfunction Expenses(prop){\r\n\r\n    const [filteredYear , setFilteredYear] =  useState('2022');\r\n    \r\n    const filterChangeHandler =(selectedYear) =>{\r\n      setFilteredYear(selectedYear);\r\n      console.log(filteredYear);\r\n    };\r\n\r\n    const filteredExpenses = prop.item.filter(expense => {\r\n      return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n    // console.log(filteredExpenses);\r\n\r\n    return (\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter \r\n          selected={filteredYear} \r\n          onChangeFilter={filterChangeHandler} \r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses}/>\r\n        \r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props){\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:'',\r\n    // })\r\n\r\n    const titleChangeHandler =(event) => {\r\n        setEnteredTitle(event.target.value);\r\n        \r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle:event.target.value\r\n        // });\r\n\r\n        // setUserInput((prevState) => {\r\n        //     return {...prevState,enteredTitle:event.target.value};\r\n        // })\r\n\r\n    };\r\n    const amountChangeHandler =(event) => {\r\n         setEnteredAmount(event.target.value);\r\n\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount:event.target.value\r\n        // });\r\n\r\n        // setUserInput((prevState) => {\r\n        //     return {...prevState,enteredAmount:event.target.value};\r\n        // })\r\n    };\r\n    const dateChangeHandler =(event) => {\r\n         setEnteredDate(event.target.value);\r\n\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate:event.target.value\r\n        // });\r\n\r\n        // setUserInput((prevState) => {\r\n        //     return {...prevState,enteredDate:event.target.value};\r\n        // })\r\n    };\r\n\r\n\r\n    const submitHandler =(event) =>{\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title : enteredTitle,\r\n            amount: +enteredAmount,\r\n            date  : new Date(enteredDate)\r\n        };\r\n        //console.log(expenseData);\r\n        props.onSubmitExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min=\"0.01\" step='0.01' value={enteredAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-13' value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n            <button type='button' onClick={props.cancel}>Cancel</button>\r\n            <button type='submit' >Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseForm;","import React,{useState} from 'react'\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nfunction NewExpense(props){\r\n    const [openAddForm, setOpenAddForm] = useState(false);\r\n\r\n    const openFormHandler = () => {\r\n        setOpenAddForm(true);\r\n    }\r\n\r\n    const closeOpenFormHandler = () =>{\r\n        setOpenAddForm(false);\r\n    }\r\n\r\n    const saveExpenseDataHandler= (enteredExpenseData)=>{\r\n        const expenseData = {\r\n            ...enteredExpenseData, id: Math.random().toString()\r\n        };\r\n        //console.log(expenseData);\r\n        props.onAddExpense(expenseData);\r\n        setOpenAddForm(false);\r\n    };\r\n\r\n    return <div className='new-expense'>\r\n        {!openAddForm && <button onClick={openFormHandler}>Add Expense Item</button>}\r\n        {openAddForm && <ExpenseForm onSubmitExpenseData={saveExpenseDataHandler} cancel={closeOpenFormHandler}/>}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        // <nav className={`navbar navbar-expand-lg navbar-${props.mode==='primary'?'dark':'primary'} bg-${props.mode}`}>\r\n        <nav className=\"navbar navbar-expand-lg\" style={{backgroundColor: '#30106b'}}>\r\n        {/* <nav className=\"navbar\" style={{ background-color: #e3f2fd; }} > */}\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" style={{color:'white'}} href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    \r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='primary'?'light':'light'}`}>\r\n                    {/* <div className={`form-check form-switch text-${props.mode}`}> */}\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Navbar from './components/UI/Navbar';\n\nconst Dummy_Expenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2',\n    title: 'New TV', \n    amount: 799.49, \n    date: new Date(2021, 2, 12) \n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [mode, setMode] = useState('primary');\n\n  const [expenses, setExpenses] = useState(Dummy_Expenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses ((prevExpenses) => {\n    return [expense, ...prevExpenses];\n    })\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'primary'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#283149';\n    }\n    else{\n      setMode('primary')\n      document.body.style.backgroundColor = '#e3f2fd';\n    }\n  }\n\n  return (\n    <div>\n      <Navbar title=\"EXPENSIFY - My Expense Calculator\" mode={mode} toggleMode={toggleMode} key={new Date()}/>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses item={expenses}/>\n      <footer style={{textAlign:'center' , color:'#cc8899'}} ><p>made by <span style={{color:'red'}}>&hearts;</span> ASHU</p></footer>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}